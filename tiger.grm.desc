2 shift/reduce conflicts

error:  state 57: shift/reduce conflict (shift FUNCTION, reduce by rule 22)
error:  state 59: shift/reduce conflict (shift TYPE, reduce by rule 20)

state 0:

	program : . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	program	goto 145
	exp	goto 6
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 1:

	exp : array_c .  (reduce by rule 11)



	.	reduce by rule 11


state 2:

	exp : record_c .  (reduce by rule 10)



	.	reduce by rule 10


state 3:

	exp : binops .  (reduce by rule 8)



	.	reduce by rule 8


state 4:

	exp : funcall .  (reduce by rule 7)



	.	reduce by rule 7


state 5:

	exp : lvalue .  (reduce by rule 1)
	exp : lvalue . ASSIGN exp 

	ASSIGN	shift 18


	.	reduce by rule 1


state 6:

	program : exp .  (reduce by rule 0)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 0


state 7:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 8:

	exp : BREAK .  (reduce by rule 4)



	.	reduce by rule 4


state 9:

	exp : LET . decs IN exp END 


	decs	goto 31

	.	reduce by rule 19


state 10:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 32


	.	error


state 11:

	exp : WHILE . exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 33
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 12:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 34
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 13:

	exp : MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 35
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 14:

	exp : LPAREN . expseq RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 37
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1
	expseq	goto 36

	.	reduce by rule 47


state 15:

	exp : STRING .  (reduce by rule 6)



	.	reduce by rule 6


state 16:

	exp : INT .  (reduce by rule 5)



	.	reduce by rule 5


state 17:

	lvalue : ID . lvalue_more 
	funcall : ID . LPAREN funcall_more RPAREN 
	record_c : ID . LBRACE record record_cf RBRACE 
	array_c : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 42
	LBRACK	shift 41
	LBRACE	shift 40
	DOT	shift 39

	lvalue_more	goto 38

	.	reduce by rule 63


state 18:

	exp : lvalue ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 43
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 19:

	binops : exp OR . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 44
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 20:

	binops : exp AND . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 45
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 21:

	binops : exp GE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 46
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 22:

	binops : exp GT . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 47
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 23:

	binops : exp LE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 48
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 24:

	binops : exp LT . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 49
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 25:

	binops : exp NEQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 50
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 26:

	binops : exp EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 51
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 27:

	binops : exp DIVIDE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 52
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 28:

	binops : exp TIMES . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 53
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 29:

	binops : exp MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 54
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 30:

	binops : exp PLUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 55
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 31:

	exp : LET decs . IN exp END 
	decs : decs . dec 

	IN	shift 65
	FUNCTION	shift 64
	VAR	shift 63
	TYPE	shift 62

	dec	goto 61
	tydec	goto 60
	tydec_more	goto 59
	vardec	goto 58
	fundec_more	goto 57
	fundec	goto 56

	.	error


state 32:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 66


	.	error


state 33:

	exp : WHILE exp . DO exp 
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 67


	.	error


state 34:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	THEN	shift 68


	.	error


state 35:

	exp : MINUS exp .  (reduce by rule 9)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 



	.	reduce by rule 9


state 36:

	exp : LPAREN expseq . RPAREN 
	expseq : expseq . SEMICOLON exp 

	SEMICOLON	shift 70
	RPAREN	shift 69


	.	error


state 37:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	expseq : exp .  (reduce by rule 45)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 45


state 38:

	lvalue : ID lvalue_more .  (reduce by rule 60)



	.	reduce by rule 60


state 39:

	lvalue_more : DOT . ID lvalue_more 

	ID	shift 71


	.	error


state 40:

	record_c : ID LBRACE . record record_cf RBRACE 

	ID	shift 73

	record	goto 72

	.	error


state 41:

	array_c : ID LBRACK . exp RBRACK OF exp 
	lvalue_more : LBRACK . exp RBRACK lvalue_more 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 74
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 42:

	funcall : ID LPAREN . funcall_more RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 77
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1
	funcall_more	goto 76
	fun_parameters	goto 75

	.	reduce by rule 44


state 43:

	exp : lvalue ASSIGN exp .  (reduce by rule 2)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 2


state 44:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	binops : exp OR exp .  (reduce by rule 59)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20


	.	reduce by rule 59


state 45:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp AND exp .  (reduce by rule 58)
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21


	.	reduce by rule 58


state 46:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp GE exp .  (reduce by rule 57)
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 57


state 47:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp GT exp .  (reduce by rule 56)
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 56


state 48:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp LE exp .  (reduce by rule 55)
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 55


state 49:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp LT exp .  (reduce by rule 54)
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 54


state 50:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp NEQ exp .  (reduce by rule 53)
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 53


state 51:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp EQ exp .  (reduce by rule 52)
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 52:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp DIVIDE exp .  (reduce by rule 51)
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 



	.	reduce by rule 51


state 53:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp TIMES exp .  (reduce by rule 50)
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 



	.	reduce by rule 50


state 54:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp MINUS exp .  (reduce by rule 49)
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 49


state 55:

	binops : exp . PLUS exp 
	binops : exp PLUS exp .  (reduce by rule 48)
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 48


state 56:

	fundec_more : fundec .  (reduce by rule 37)



	.	reduce by rule 37

error:  state 57: shift/reduce conflict (shift FUNCTION, reduce by rule 22)

state 57:

	dec : fundec_more .  (reduce by rule 22)
	fundec_more : fundec_more . fundec 

	FUNCTION	shift 64

	fundec	goto 78

	.	reduce by rule 22


state 58:

	dec : vardec .  (reduce by rule 21)



	.	reduce by rule 21

error:  state 59: shift/reduce conflict (shift TYPE, reduce by rule 20)

state 59:

	dec : tydec_more .  (reduce by rule 20)
	tydec_more : tydec_more . tydec 

	TYPE	shift 62

	tydec	goto 79

	.	reduce by rule 20


state 60:

	tydec_more : tydec .  (reduce by rule 24)



	.	reduce by rule 24


state 61:

	decs : decs dec .  (reduce by rule 18)



	.	reduce by rule 18


state 62:

	tydec : TYPE . ID EQ ty 

	ID	shift 80


	.	error


state 63:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 81


	.	error


state 64:

	fundec : FUNCTION . ID LPAREN ty_fields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN ty_fields RPAREN COLON ID EQ exp 

	ID	shift 82


	.	error


state 65:

	exp : LET decs IN . exp END 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 83
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 66:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 84
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 67:

	exp : WHILE exp DO . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 85
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 68:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 86
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 69:

	exp : LPAREN expseq RPAREN .  (reduce by rule 17)



	.	reduce by rule 17


state 70:

	expseq : expseq SEMICOLON . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 87
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 71:

	lvalue_more : DOT ID . lvalue_more 

	LBRACK	shift 89
	DOT	shift 39

	lvalue_more	goto 88

	.	reduce by rule 63


state 72:

	record_c : ID LBRACE record . record_cf RBRACE 

	COMMA	shift 91

	record_cf	goto 90

	.	reduce by rule 67


state 73:

	record : ID . EQ exp 

	EQ	shift 92


	.	error


state 74:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	array_c : ID LBRACK exp . RBRACK OF exp 
	lvalue_more : LBRACK exp . RBRACK lvalue_more 

	RBRACK	shift 93
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	error


state 75:

	funcall_more : fun_parameters .  (reduce by rule 43)
	fun_parameters : fun_parameters . COMMA exp 

	COMMA	shift 94


	.	reduce by rule 43


state 76:

	funcall : ID LPAREN funcall_more . RPAREN 

	RPAREN	shift 95


	.	error


state 77:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	fun_parameters : exp .  (reduce by rule 40)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 40


state 78:

	fundec_more : fundec_more fundec .  (reduce by rule 36)



	.	reduce by rule 36


state 79:

	tydec_more : tydec_more tydec .  (reduce by rule 23)



	.	reduce by rule 23


state 80:

	tydec : TYPE ID . EQ ty 

	EQ	shift 96


	.	error


state 81:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 98
	ASSIGN	shift 97


	.	error


state 82:

	fundec : FUNCTION ID . LPAREN ty_fields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN ty_fields RPAREN COLON ID EQ exp 

	LPAREN	shift 99


	.	error


state 83:

	exp : LET decs IN exp . END 
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	END	shift 100


	.	error


state 84:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	TO	shift 101


	.	error


state 85:

	exp : WHILE exp DO exp .  (reduce by rule 14)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 14


state 86:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 13)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	ELSE	shift 102


	.	reduce by rule 13


state 87:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	expseq : expseq SEMICOLON exp .  (reduce by rule 46)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 46


state 88:

	lvalue_more : DOT ID lvalue_more .  (reduce by rule 61)



	.	reduce by rule 61


state 89:

	lvalue_more : LBRACK . exp RBRACK lvalue_more 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 103
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 90:

	record_c : ID LBRACE record record_cf . RBRACE 

	RBRACE	shift 104


	.	error


state 91:

	record_cf : COMMA . record record_cf 

	ID	shift 73

	record	goto 105

	.	error


state 92:

	record : ID EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 106
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 93:

	array_c : ID LBRACK exp RBRACK . OF exp 
	lvalue_more : LBRACK exp RBRACK . lvalue_more 

	LBRACK	shift 89
	DOT	shift 39
	OF	shift 108

	lvalue_more	goto 107

	.	reduce by rule 63


state 94:

	fun_parameters : fun_parameters COMMA . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 109
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 95:

	funcall : ID LPAREN funcall_more RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 96:

	tydec : TYPE ID EQ . ty 

	ID	shift 113
	LBRACE	shift 112
	ARRAY	shift 111

	ty	goto 110

	.	error


state 97:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 114
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 98:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 115


	.	error


state 99:

	fundec : FUNCTION ID LPAREN . ty_fields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . ty_fields RPAREN COLON ID EQ exp 

	ID	shift 118

	ty_field	goto 117
	ty_fields	goto 116

	.	reduce by rule 31


state 100:

	exp : LET decs IN exp END .  (reduce by rule 16)



	.	reduce by rule 16


state 101:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 119
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 102:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 120
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 103:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	lvalue_more : LBRACK exp . RBRACK lvalue_more 

	RBRACK	shift 121
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	error


state 104:

	record_c : ID LBRACE record record_cf RBRACE .  (reduce by rule 65)



	.	reduce by rule 65


state 105:

	record_cf : COMMA record . record_cf 

	COMMA	shift 91

	record_cf	goto 122

	.	reduce by rule 67


state 106:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	record : ID EQ exp .  (reduce by rule 64)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 64


state 107:

	lvalue_more : LBRACK exp RBRACK lvalue_more .  (reduce by rule 62)



	.	reduce by rule 62


state 108:

	array_c : ID LBRACK exp RBRACK OF . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 123
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 109:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	fun_parameters : fun_parameters COMMA exp .  (reduce by rule 41)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 41


state 110:

	tydec : TYPE ID EQ ty .  (reduce by rule 25)



	.	reduce by rule 25


state 111:

	ty : ARRAY . OF ID 

	OF	shift 124


	.	error


state 112:

	ty : LBRACE . ty_fields RBRACE 

	ID	shift 118

	ty_field	goto 117
	ty_fields	goto 125

	.	reduce by rule 31


state 113:

	ty : ID .  (reduce by rule 26)



	.	reduce by rule 26


state 114:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 34)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 34


state 115:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 126


	.	error


state 116:

	fundec : FUNCTION ID LPAREN ty_fields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN ty_fields . RPAREN COLON ID EQ exp 

	RPAREN	shift 127


	.	error


state 117:

	ty_fields : ty_field . ty_fields_more 

	COMMA	shift 129

	ty_fields_more	goto 128

	.	reduce by rule 33


state 118:

	ty_field : ID . COLON ID 

	COLON	shift 130


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 131


	.	error


state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 12)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 12


state 121:

	lvalue_more : LBRACK exp RBRACK . lvalue_more 

	LBRACK	shift 89
	DOT	shift 39

	lvalue_more	goto 107

	.	reduce by rule 63


state 122:

	record_cf : COMMA record record_cf .  (reduce by rule 66)



	.	reduce by rule 66


state 123:

	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 
	array_c : ID LBRACK exp RBRACK OF exp .  (reduce by rule 68)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 68


state 124:

	ty : ARRAY OF . ID 

	ID	shift 132


	.	error


state 125:

	ty : LBRACE ty_fields . RBRACE 

	RBRACE	shift 133


	.	error


state 126:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 134
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 127:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN ty_fields RPAREN . COLON ID EQ exp 

	COLON	shift 136
	EQ	shift 135


	.	error


state 128:

	ty_fields : ty_field ty_fields_more .  (reduce by rule 30)



	.	reduce by rule 30


state 129:

	ty_fields_more : COMMA . ty_field ty_fields_more 

	ID	shift 118

	ty_field	goto 137

	.	error


state 130:

	ty_field : ID COLON . ID 

	ID	shift 138


	.	error


state 131:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 139
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 132:

	ty : ARRAY OF ID .  (reduce by rule 28)



	.	reduce by rule 28


state 133:

	ty : LBRACE ty_fields RBRACE .  (reduce by rule 27)



	.	reduce by rule 27


state 134:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 35)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 35


state 135:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 140
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 136:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON . ID EQ exp 

	ID	shift 141


	.	error


state 137:

	ty_fields_more : COMMA ty_field . ty_fields_more 

	COMMA	shift 129

	ty_fields_more	goto 142

	.	reduce by rule 33


state 138:

	ty_field : ID COLON ID .  (reduce by rule 29)



	.	reduce by rule 29


state 139:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 15)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 15


state 140:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN EQ exp .  (reduce by rule 38)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 38


state 141:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON ID . EQ exp 

	EQ	shift 143


	.	error


state 142:

	ty_fields_more : COMMA ty_field ty_fields_more .  (reduce by rule 32)



	.	reduce by rule 32


state 143:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 144
	lvalue	goto 5
	funcall	goto 4
	binops	goto 3
	record_c	goto 2
	array_c	goto 1

	.	error


state 144:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ exp .  (reduce by rule 39)
	binops : exp . PLUS exp 
	binops : exp . MINUS exp 
	binops : exp . TIMES exp 
	binops : exp . DIVIDE exp 
	binops : exp . EQ exp 
	binops : exp . NEQ exp 
	binops : exp . LT exp 
	binops : exp . LE exp 
	binops : exp . GT exp 
	binops : exp . GE exp 
	binops : exp . AND exp 
	binops : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 39


state 145:


	EOF	accept


	.	error

441 of 956 action table entries left after compaction
245 goto table entries
